# config.yml for CircleCI
# This puppy will build our container using a standard docker:stable-git container
# It will tag the build with the git tag applied ($CIRCLE_TAG)
# Once built it will push the image to docker hub
# Once we have pushed to docker hub (i.e. the 'build_branch' job completes)
# we then deploy the new image to production using helm

# This is the STABLE branch
# $CIRCLE_BRANCH =  stable

version: 2
jobs:
  build_branch:
    docker:
      # Since Circle CI needs to be able to clone our repository from GitHub, BitBucket, etc,
      # we need to use a docker image that has the git binary installed
      - image: docker:stable-git
    steps:
      - checkout
   
      # Setting up the remote Docker
      - setup_remote_docker
      - run:
          name: Login to the Docker Registry
          command: echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Build the Docker Image
          command: docker build -t $DOCKER_IMAGE:$CIRCLE_BRANCH .
      - run:
          name: Push the Docker Image
          command: docker push $DOCKER_IMAGE:$CIRCLE_BRANCH

  deploy_stable:
    docker:
      - image: scotwells/helm-docker
    steps:
      - checkout
      - run:
          name: Setup K8s Cluster Config
          command: |
            echo $KUBERNETES_CA_CERT | base64 -d > ca.crt
            kubectl config set-cluster default \
              --server=$KUBERNETES_SERVER_URL \
              --embed-certs=true \
              --certificate-authority=ca.crt
      - run:
          name: Setup K8s Credentials Config
          command: kubectl config set-credentials default --token=$KUBERNETES_AUTH_TOKEN
      - run:
          name: Setup K8s Context Config
          command: kubectl config set-context default --cluster=default --user=default
      - run:
          name: Set K8s Context
          command: kubectl config use-context default

      # deploy the application using Helm
      - run:
          name: Deploy application with Helm
          command: |
            helm upgrade mrs-www-prod ./mrs-www \
              --namespace=$KUBERNETES_NAMESPACE \
              --wait \
              --install \
              --values mrs-www/values.yaml \
              --set image.repository=$DOCKER_IMAGE \
              --recreate-pods

workflows:
  version: 2
  build_branch_and_deploy:
    jobs:
      - build_branch
      - deploy_stable:
          requires:
            - build_branch
          filters:
            tags:
              only: /^v\d+.\d+.\d+$/
            branches:
              only: /^stable$/
